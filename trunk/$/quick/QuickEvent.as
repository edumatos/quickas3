package quick{	import flash.utils.Dictionary	import flash.events.EventDispatcher	import flash.events.Event	public class QuickEvent{		private static var eventWrappers:Dictionary = new Dictionary();		public static function bind(self:Quicker, item:EventDispatcher, event:String, fn:Function):void{									if(eventWrappers[item] == null)				eventWrappers[item] = {}							if(eventWrappers[item][event] == null)				eventWrappers[item][event] = [];						var wrapper:Function = function(event:Event){ fn.apply(self, fn.length ? [event] : null) }			eventWrappers[item][event].push([fn, wrapper])									item.addEventListener(event, wrapper, false, 1, true)		}				public static function unbind(item:*, event:String, fn:Function):void{			if(eventWrappers[item] != null){				var events:Array = eventWrappers[item][event] as Array				if( events != null){					for( var a:int=0;a<events.length;a++){						var eo:Array = events[a] as Array;						if(eo[0] == fn){							events.splice(a,1)							item.removeEventListener(event, eo[1])							break;						}					}				}			}		}				public static function release(item:*, event:String):void{			if(eventWrappers[item] != null){				var events:Array = eventWrappers[item][event] as Array				if( events != null){					while(events.length){						unbind(item, event, events[0][0])					}				}			}		}	}	}